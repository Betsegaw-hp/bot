{"id":"sandbox","title":"Sandbox","src":"# A tiny Python 3 playground on your web browser!\nb_points = {}\n\nx = 10\n\ny = 10\n\nn = int((((x+y)/2)*2) - 4) \n\nwalls = []\n\ni = x\n\nj = y\n\nwhile n > 1:\n\n    #walls\n\n    walls.append((1,n))\n\n    walls.append((n,1))\n\n    walls.append((i+j-1, n))\n\n    walls.append((n,i+j))\n\n    #beepers\n\n    b_points.update({ (n/2,1):1,\n\n    (1,n/2):1, (n/2,j):1, (i,n/2):1 })\n\n    n = n-4      \n\nconfig = {\n\n      'avenues' : 'avenues = %d'%y,\n\n     'streets' : 'streets = %d'%x ,\n\n      'robot' : 'robot = (1, 1, \"E\", 0) ' ,\n\n      'walls' : f'walls = { walls }',\n\n      'beepers' : f'beepers = { b_points } '\n\n}\n\nlines = []\n\nfor item in config:\n\n    lines.append(config[item])\n\nwith open(\"any.wld\", 'w') as f:\n\n    for line in lines:\n\n        f.write(line)\n\n        f.write('\\n')\n\n\n\nfrom cs1robots import *\n\nload_world(\"any.wld\")\n\nbot = Robot()\n\nbot.set_trace(\"red\")\n\nbot.set_pause(0.1)\n\n\ndef pick_beeper():\n\n    bot.on_beeper() and bot.pick_beeper()\n    \ndef move(n = 1):\n\n    while n > 0:\n\n        bot.move()\n\n        n = n - 1\n\ndef rotate(r = 1):\n\n    while r > 0:\n\n        bot.turn_left()\n\n        r = r - 1\ndef radar():\n    if bot.right_is_clear(): rotate(3)\n\n    elif bot.left_is_clear(): rotate()\n\n    else : print('I am traped')\n    \n\n\ninitial_pos = bot.get_pos() \ndef trip():\n    while True :\n\n        if not bot.front_is_clear():\n            radar()\n\n\n\n        pick_beeper()\n        move()\n        pick_beeper()\n        radar()\n        if bot.get_pos() == initial_pos:\n            break\ntrip()\n","files":{"any.wld":{"type":"text","body":"avenues = 10\nstreets = 10\nrobot = (1, 1, \"E\", 0) \nwalls = [(1, 16), (16, 1), (19, 16), (16, 20), (1, 12), (12, 1), (19, 12), (12, 20), (1, 8), (8, 1), (19, 8), (8, 20), (1, 4), (4, 1), (19, 4), (4, 20)]\nbeepers = {(8.0, 1): 1, (1, 8.0): 1, (8.0, 10): 1, (10, 8.0): 1, (6.0, 1): 1, (1, 6.0): 1, (6.0, 10): 1, (10, 6.0): 1, (4.0, 1): 1, (1, 4.0): 1, (4.0, 10): 1, (10, 4.0): 1, (2.0, 1): 1, (1, 2.0): 1, (2.0, 10): 1, (10, 2.0): 1} \n"}}}